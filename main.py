#1.Привести всю строку к нижнему регистру, чтобы сравнение было регистронезависимым.
#2.Удалить из строки все неалфавитные символы, так как они не влияют на определение палиндрома.
#3.Сравнить строку с её перевёрнутой версией. Если они идентичны, то строка является палиндромом.
#4.Вернуть результат сравнения: True, если строка является палиндромом, и False в противном случае.'''



def is_palindrome(s: str) -> bool:
    """
    Проверяет, является ли строка палиндромом.

    :param s: Строка для проверки
    :return: True, если строка является палиндромом, иначе False
    """
    # 1. Привести строку к нижнему регистру и удалить пробелы
    cleaned_string = s.replace(" ", "").lower()

    # 2. Перевернуть строку
    reversed_string = cleaned_string[::-1]

    # 3. Сравнить исходную строку и её перевёрнутую версию
    return cleaned_string == reversed_string


# Примеры использования функции
print(is_palindrome("А роза упала на лапу Азора"))  # True
print(is_palindrome("казак"))  # True
print(is_palindrome("Привет Мир"))  # False
